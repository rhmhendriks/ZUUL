#BlueJ class context
comment0.target=Room
comment0.text=\n\ Class\ Room\ -\ a\ room\ in\ an\ adventure\ game.\n\n\ This\ class\ is\ part\ of\ the\ "World\ of\ Zuul"\ application.\ \n\ "World\ of\ Zuul"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\ \ \n\n\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ \ It\ is\ \n\ connected\ to\ other\ rooms\ via\ exits.\ \ For\ each\ existing\ exit,\ the\ room\ \n\ stores\ a\ reference\ to\ the\ neighboring\ room.\n\ \n\ @author\ \ Ronald\ H.M.\ Hendriks\ and\ Luc\ Willemse\n\ @version\ 2019.01.08\n
comment1.params=description
comment1.target=Room(java.lang.String)
comment1.text=\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\n\ no\ exits.\ "description"\ is\ something\ like\ "a\ kitchen"\ or\n\ "an\ open\ court\ yard".\n\ @param\ description\ The\ room's\ description.\n
comment10.params=direction
comment10.target=Room\ getExit(java.lang.String)
comment10.text=\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\n\ @param\ direction\ The\ exit's\ direction.\n\ @return\ The\ room\ in\ the\ given\ direction.\n
comment11.params=index
comment11.target=Item\ getItem(int)
comment11.text=\ \n\ get\ the\ items\ from\ the\ room\n\ @param\ index\ The\ name\ of\ the\ object\ you\ want\ to\ have\ returned\n\ @return\ The\ requested\ object\n
comment12.params=
comment12.target=void\ look()
comment12.text=\n\ Method\ used\ to\ print\ the\ look\ descriptions\ about\ the\ room\n
comment13.params=itemName
comment13.target=Item\ pickupItem(java.lang.String)
comment14.params=itemName
comment14.target=void\ removeItem(java.lang.String)
comment15.params=newitem
comment15.target=void\ setItem(Item)
comment16.params=
comment16.target=java.lang.String\ getRoomItems()
comment2.params=direction\ neighbor
comment2.target=void\ setExit(java.lang.String,\ Room)
comment2.text=\n\ Define\ an\ exit\ from\ this\ room.\n\ @param\ direction\ The\ direction\ of\ the\ exit.\n\ @param\ neighbor\ \ The\ room\ to\ which\ the\ exit\ leads.\n
comment3.params=lookDescr
comment3.target=void\ setLookDescription(java.lang.String)
comment3.text=\n\ Define\ the\ output\ of\ the\ look\ command\ in\ the\ specified\ room\n\ @param\ lookDescr\ The\ wanted\ output\ when\ a\ user\ uses\ "look"\ in\ this\ room.\n
comment4.params=secondDescr
comment4.target=void\ setSecondDescription(java.lang.String)
comment4.text=\n\ Define\ the\ output\ of\ the\ second\ description\ command\ in\ the\ specified\ room\n\ @param\ lookDescr\ The\ wanted\ output\ when\ a\ user\ uses\ "look"\ in\ this\ room.\n
comment5.params=
comment5.target=java.lang.String\ getShortDescription()
comment5.text=\n\ @return\ The\ short\ description\ of\ the\ room\n\ (the\ one\ that\ was\ defined\ in\ the\ constructor).\n
comment6.params=
comment6.target=java.lang.String\ getLongDescription()
comment6.text=\n\ Return\ a\ description\ of\ the\ room\ in\ the\ form\:\n\ \ \ \ \ You\ are\ in\ the\ kitchen.\n\ \ \ \ \ Exits\:\ north\ west\n\ @return\ A\ long\ description\ of\ this\ room\n
comment7.params=
comment7.target=java.lang.String\ getSecondDescription()
comment7.text=\n\ Return\ the\ second\ description\ of\ the\ room\n\ @return\ A\ second\ description\ of\ this\ room\n
comment8.params=
comment8.target=java.lang.String\ getExitString()
comment8.text=\n\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example\n\ "Exits\:\ north\ west".\n\ @return\ Details\ of\ the\ room's\ exits.\n
comment9.params=askedDirection
comment9.target=java.lang.String\ getDirection(Room)
numComments=17
